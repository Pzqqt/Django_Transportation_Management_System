# Generated by Django 4.0.3 on 2022-04-02 16:53

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import re
import utils.common._common
import wuliu.models


class Migration(migrations.Migration):

    replaces = []

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Settings',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company_name', models.CharField(max_length=32, verbose_name='公司名称')),
                ('handling_fee_ratio',
                 models.FloatField(validators=[wuliu.models._validate_handling_fee_ratio], verbose_name='手续费比例(向上取整)')),
                ('customer_score_ratio', models.FloatField(validators=[wuliu.models._validate_customer_score_ratio],
                                                           verbose_name='客户积分比例(向上取整)')),
            ],
            options={
                'verbose_name': '全局配置',
                'verbose_name_plural': '全局配置',
            },
        ),
        migrations.CreateModel(
            name='PermissionGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64, unique=True, validators=[
                    django.core.validators.RegexValidator(re.compile('^[-a-zA-Z0-9_]+\\Z'),
                                                          'Enter a valid “slug” consisting of letters, numbers, underscores or hyphens.',
                                                          'invalid')], verbose_name='权限组名')),
                ('father', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL,
                                             to='wuliu.permissiongroup', verbose_name='父权限组')),
                ('print_name', models.CharField(max_length=64, verbose_name='打印权限组名')),
            ],
            options={
                'verbose_name': '权限组',
                'verbose_name_plural': '权限组',
            },
        ),
        migrations.CreateModel(
            name='Permission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64, unique=True, validators=[
                    django.core.validators.RegexValidator(re.compile('^[-a-zA-Z0-9_]+\\Z'),
                                                          'Enter a valid “slug” consisting of letters, numbers, underscores or hyphens.',
                                                          'invalid')], verbose_name='权限名')),
                ('father',
                 models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT,
                                   to='wuliu.permissiongroup', verbose_name='父权限组')),
                ('print_name', models.CharField(max_length=64, verbose_name='打印权限名')),
            ],
            options={
                'verbose_name': '权限',
                'verbose_name_plural': '权限',
            },
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_branch_group', models.BooleanField(default=False, verbose_name='分支机构分组')),
                ('name', models.CharField(max_length=32, unique=True, verbose_name='部门名称')),
                ('unit_price',
                 models.FloatField(db_index=True, validators=[django.core.validators.MinValueValidator(0)],
                                   verbose_name='单价 (元/千克/立方米)')),
                ('enable_src', models.BooleanField(default=False, verbose_name='允许收货')),
                ('enable_dst', models.BooleanField(default=False, verbose_name='允许到货')),
                ('enable_cargo_price', models.BooleanField(default=False, verbose_name='允许代收')),
                ('father_department',
                 models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL,
                                   to='wuliu.department', verbose_name='上级部门')),
            ],
            options={
                'verbose_name': '部门',
                'verbose_name_plural': '部门',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32, unique=True, verbose_name='用户名')),
                ('enabled', models.BooleanField(db_index=True, default=True, verbose_name='启用')),
                ('administrator', models.BooleanField(default=False, verbose_name='管理员')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='wuliu.department', verbose_name='所属部门')),
                ('permission', models.ManyToManyField(to='wuliu.permission', verbose_name='权限')),
                ('password', models.CharField(max_length=128, verbose_name='密码')),
            ],
            options={
                'verbose_name': '用户',
                'verbose_name_plural': '用户',
            },
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=32, verbose_name='姓名')),
                ('phone', models.CharField(max_length=16, unique=True, verbose_name='电话号码')),
                ('enabled', models.BooleanField(db_index=True, default=True, verbose_name='启用')),
                ('bank_name', models.CharField(max_length=32, verbose_name='银行名称')),
                ('bank_number', models.CharField(max_length=32, verbose_name='银行卡号')),
                ('credential_num', models.CharField(max_length=32, verbose_name='身份证号')),
                ('address', models.CharField(blank=True, max_length=64, verbose_name='详细地址')),
                ('is_vip', models.BooleanField(db_index=True, default=False, verbose_name='会员')),
                ('score', models.PositiveIntegerField(default=0, verbose_name='积分')),
                ('create_time', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='创建时间')),
            ],
            options={
                'verbose_name': '客户',
                'verbose_name_plural': '客户',
            },
        ),
        migrations.CreateModel(
            name='CargoPricePayment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='创建时间')),
                ('settle_accounts_time', models.DateTimeField(null=True, verbose_name='结算时间')),
                ('payee_name', models.CharField(max_length=32, verbose_name='收款人姓名')),
                ('payee_phone', models.CharField(max_length=16, verbose_name='收款人电话号码')),
                ('payee_bank_name', models.CharField(max_length=32, verbose_name='收款人银行名称')),
                ('payee_bank_number', models.CharField(max_length=32, verbose_name='收款人银行卡号')),
                ('payee_credential_num', models.CharField(max_length=32, verbose_name='收款人身份证号')),
                ('remark', models.CharField(blank=True, max_length=256, verbose_name='备注')),
                ('reject_reason', models.CharField(blank=True, max_length=256, verbose_name='驳回原因')),
                ('status', models.SmallIntegerField(choices=[(0, '已创建'), (1, '已提交'), (2, '已审核'), (3, '已支付'), (4, '已驳回')], db_index=True, default=0, verbose_name='状态')),
                ('create_user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='wuliu.user', verbose_name='创建人')),
            ],
            options={
                'verbose_name': '代收款转账单',
                'verbose_name_plural': '代收款转账单',
            },
        ),
        migrations.CreateModel(
            name='Waybill',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='创建日期')),
                ('arrival_time', models.DateTimeField(blank=True, db_index=True, null=True, verbose_name='到货日期')),
                ('sign_for_time', models.DateTimeField(blank=True, db_index=True, null=True, verbose_name='提货日期')),
                ('src_customer_name', models.CharField(max_length=32, verbose_name='发货人')),
                ('src_customer_phone', models.CharField(max_length=16, verbose_name='发货人电话')),
                ('src_customer_credential_num', models.CharField(blank=True, max_length=32, verbose_name='发货人身份证号码')),
                ('src_customer_address', models.CharField(blank=True, max_length=64, verbose_name='发货人地址')),
                ('dst_customer_name', models.CharField(max_length=32, verbose_name='收货人')),
                ('dst_customer_phone', models.CharField(max_length=16, verbose_name='收货人电话')),
                ('dst_customer_credential_num', models.CharField(blank=True, max_length=32, verbose_name='收货人身份证号码')),
                ('dst_customer_address', models.CharField(blank=True, max_length=64, verbose_name='收货人地址')),
                ('cargo_name', models.CharField(max_length=16, verbose_name='货物名称')),
                ('cargo_num', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1)], verbose_name='件数')),
                ('cargo_volume', models.FloatField(validators=[django.core.validators.MinValueValidator(0.01)], verbose_name='体积')),
                ('cargo_weight', models.FloatField(validators=[django.core.validators.MinValueValidator(0.1)], verbose_name='重量')),
                ('cargo_price', models.PositiveIntegerField(default=0, verbose_name='货款')),
                ('cargo_handling_fee', models.PositiveIntegerField(default=0, verbose_name='手续费')),
                ('fee', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1)], verbose_name='运费')),
                ('fee_type', models.SmallIntegerField(choices=[(0, '提付'), (1, '现付'), (2, '扣付')], db_index=True, verbose_name='运费类型')),
                ('customer_remark', models.CharField(blank=True, max_length=64, verbose_name='客户备注')),
                ('company_remark', models.CharField(blank=True, max_length=64, verbose_name='公司备注')),
                ('sign_for_customer_name', models.CharField(blank=True, max_length=32, verbose_name='签收人')),
                ('sign_for_customer_credential_num', models.CharField(blank=True, max_length=32, verbose_name='签收人身份证号码')),
                ('status', models.SmallIntegerField(choices=[(0, '已开票'), (1, '已配载'), (2, '已发车'), (3, '货场入库'), (4, '货场配载'), (5, '货场发车'), (6, '到站待提'), (7, '客户签收'), (8, '已退货'), (9, '已作废')], db_index=True, default=0, verbose_name='状态')),
                ('drop_reason', models.CharField(blank=True, max_length=64, verbose_name='作废原因')),
                ('cargo_price_payment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='wuliu.cargopricepayment', verbose_name='代收款转账单')),
                ('dst_customer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='dst_customer', to='wuliu.customer', verbose_name='收货客户')),
                ('dst_department', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='wb_dst_department', to='wuliu.department', verbose_name='到达部门')),
                ('return_waybill', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='wuliu.waybill', verbose_name='退货原运单')),
                ('src_customer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='src_customer', to='wuliu.customer', verbose_name='发货客户')),
                ('src_department', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='wb_src_department', to='wuliu.department', verbose_name='发货部门')),
                ('cargo_price_status', models.SmallIntegerField(choices=[(0, '无代收'), (1, '未支付'), (2, '已支付')], db_index=True, default=0, verbose_name='代收款状态')),
            ],
            options={
                'verbose_name': '运单',
                'verbose_name_plural': '运单',
            },
        ),
        migrations.CreateModel(
            name='Truck',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number_plate', models.CharField(max_length=8, unique=True, verbose_name='车牌号')),
                ('driver_name', models.CharField(max_length=32, verbose_name='驾驶员姓名')),
                ('driver_phone', models.CharField(max_length=16, verbose_name='驾驶员电话号码')),
                ('enabled', models.BooleanField(db_index=True, default=True, verbose_name='启用')),
                ('create_time', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='创建时间')),
            ],
            options={
                'verbose_name': '车辆',
                'verbose_name_plural': '车辆',
            },
        ),
        migrations.CreateModel(
            name='TransportOut',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('driver_name', models.CharField(max_length=32, verbose_name='驾驶员姓名')),
                ('driver_phone', models.CharField(max_length=16, verbose_name='驾驶员电话号码')),
                ('create_time', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='创建时间')),
                ('start_time', models.DateTimeField(db_index=True, null=True, verbose_name='发车时间')),
                ('end_time', models.DateTimeField(null=True, verbose_name='到达时间')),
                ('status',
                 models.SmallIntegerField(choices=[(0, '货物配载'), (1, '车次在途'), (2, '车次到车')], db_index=True, default=0,
                                          verbose_name='状态')),
                ('dst_department',
                 models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='tn_dst_department',
                                   to='wuliu.department', verbose_name='到达部门')),
                ('src_department',
                 models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='tn_src_department',
                                   to='wuliu.department', verbose_name='发车部门')),
                ('truck',
                 models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='wuliu.truck', verbose_name='车辆')),
                ('waybills', models.ManyToManyField(to='wuliu.waybill', verbose_name='配载运单')),
            ],
            options={
                'verbose_name': '车次',
                'verbose_name_plural': '车次',
            },
        ),
        migrations.CreateModel(
            name='WaybillRouting',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time', models.DateTimeField(verbose_name='操作时间')),
                ('operation_type', models.SmallIntegerField(choices=[(0, '已开票'), (1, '已配载'), (2, '已发车'), (3, '货场入库'), (4, '货场配载'), (5, '货场发车'), (6, '到站待提'), (7, '客户签收'), (8, '已退货'), (9, '已作废')], verbose_name='操作类型')),
                ('operation_dept', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='wuliu.department', verbose_name='操作部门')),
                ('operation_user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='wuliu.user', verbose_name='操作用户')),
                ('waybill', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='wuliu.waybill', verbose_name='运单')),
                ('operation_info', models.JSONField(default=dict, encoder=utils.common._common.UnescapedDjangoJSONEncoder, verbose_name='详细内容')),
            ],
            options={
                'verbose_name': '运单路由',
                'verbose_name_plural': '运单路由',
            },
        ),
        migrations.CreateModel(
            name='DepartmentPayment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('payment_date', models.DateField(verbose_name='应回款日期')),
                ('settle_accounts_time', models.DateTimeField(null=True, verbose_name='结算时间')),
                ('status', models.SmallIntegerField(choices=[(0, '已创建'), (1, '已审核'), (2, '已回款'), (3, '已结算')], db_index=True, default=0, verbose_name='状态')),
                ('src_remark', models.CharField(blank=True, max_length=256, verbose_name='回款部门备注')),
                ('dst_remark', models.CharField(blank=True, max_length=256, verbose_name='收款部门备注')),
                ('dst_department', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='pm_dst_department', to='wuliu.department', verbose_name='收款部门')),
                ('src_department', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='pm_src_department', to='wuliu.department', verbose_name='回款部门')),
                ('waybills', models.ManyToManyField(to='wuliu.waybill', verbose_name='运单')),
            ],
            options={
                'verbose_name': '部门回款单',
                'verbose_name_plural': '部门回款单',
            },
        ),
        migrations.CreateModel(
            name='CustomerScoreLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='变动时间')),
                ('inc_or_dec', models.BooleanField(verbose_name='增或减')),
                ('score', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1)], verbose_name='变动积分')),
                ('remark', models.CharField(max_length=256, verbose_name='变更原因')),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='wuliu.customer', verbose_name='客户')),
                ('waybill', models.OneToOneField(null=True, on_delete=django.db.models.deletion.PROTECT, to='wuliu.waybill', verbose_name='关联运单')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='wuliu.user', verbose_name='操作人')),
            ],
            options={
                'verbose_name': '客户积分记录',
                'verbose_name_plural': '客户积分记录',
            },
        ),
        migrations.AddConstraint(
            model_name='settings',
            constraint=models.CheckConstraint(check=models.Q(('handling_fee_ratio__gt', 0), ('handling_fee_ratio__lte', 1)), name='check_handling_fee_ratio'),
        ),
        migrations.AddConstraint(
            model_name='settings',
            constraint=models.CheckConstraint(check=models.Q(('customer_score_ratio__gt', 0), ('customer_score_ratio__lte', 1)), name='check_customer_score_ratio'),
        ),
        migrations.AddConstraint(
            model_name='customerscorelog',
            constraint=models.CheckConstraint(check=models.Q(('score__gte', 1)), name='check_change_score'),
        ),
    ]
